plugins {
	id 'fabric-loom' version '0.9-SNAPSHOT'
	id 'maven-publish'
	id 'application'
	id 'com.github.johnrengelman.shadow' version '7.0.0'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		// https://maven.terraformersmc.com/releases/
		url 'https://maven.kotlindiscord.com/repository/terraformers/'
		content {
			includeGroup 'com.terraformersmc'
		}
	}

	maven { url 'https://maven.shedaniel.me/' }
	maven { url 'https://jitpack.io' }
    maven {	url 'https://repo.repsy.io/mvn/enderzombi102/mc/' }
    maven { url 'https://storage.googleapis.com/devan-maven/' }
    maven { url 'https://raw.githubusercontent.com/Devan-Kerman/Devan-Repo/master/' }
    maven { url 'https://server.bbkr.space/artifactory/libs-release' }
    maven { url 'https://maven.florens.be' }
    mavenCentral()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:$minecraft_version"
	mappings "net.fabricmc:yarn:$minecraft_version+$yarn_mappings:v2"
	modImplementation "net.fabricmc:fabric-loader:$loader_version"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"

	modRuntime modApi("me.shedaniel.cloth:cloth-config-fabric:$cloth_config_version") {
		exclude(group: 'net.fabricmc.fabric-api')
	}

	modImplementation group: 'net.devtech', name: 'grossfabrichacks', version: '6.1'

	modImplementation("com.terraformersmc:modmenu:$modmenu_version") {
		transitive(false)
	}

	include modImplementation("net.devtech:arrp:$arrp_version")
	//modRuntime "me.shedaniel:RoughlyEnoughItems-fabric:$rei_version"

	include modImplementation("com.enderzombi102:JythonMC:$jythonmc_version")
    modImplementation include("be.florens:expandability-fabric:$expandability_version")

	//Fixes bug in shadow
	implementation('org.vafer:jdependency:2.7.0') {
		exclude group: 'org.ow2.asm'
	}
}

application {
	mainClassName = "fr.anatom3000.gwwhit.commandline.CommandLine"
}

processResources {
	inputs.property 'version', project.version

	filesMatching('fabric.mod.json') {
		expand 'version': project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = 'UTF-8'

	it.options.release.set(16)
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	toolchain {
		languageVersion = JavaLanguageVersion.of(16)
	}
}

jar {
	from('LICENSE') {
		rename {"${it}_${project.archivesBaseName}"}
	}

	manifest.attributes.put("Main-Class", "fr.anatom3000.gwwhit.commandline.CommandLine")
}

shadowJar {
	dependencies {
		include(dependency("com.google.code.gson:gson"))
	}

	//Currently broken. Should be fixed in a future shadow release
	//minimize()
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation
task relocateShadowJar(type: ConfigureShadowRelocation) {
	target = tasks.shadowJar
	prefix = "fr.anatom3000.gwwhit.shadow"

}
tasks.shadowJar.dependsOn tasks.relocateShadowJar

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
